pipeline {
  agent any
  parameters {
    choice(
      name: 'ACTION',
      choices: ['deploy-stack', 'update-stack', 'delete-stack'],
      description: 'CloudFormation Actions'
    )
    string(name: 'STACK_NAME', defaultValue: 'example-stack', description: 'Enter the CloudFormation Stack Name.')
    string(name: 'PARAMETERS_FILE_NAME', defaultValue: 'example-stack-parameters.properties', description: 'Enter the Parameters File Name (Must contain file extension type *.properties)')
    string(name: 'TEMPLATE_NAME', defaultValue: 'Word.yml', description: 'Enter the CloudFormation Template Name (Must contain file extension type *.yaml)')
    credentials(name: 'CFN_CREDENTIALS_ID', defaultValue: '', description: 'AWS Account Role.', required: true)
    choice(
      name: 'REGION',
      choices: ['us-east-1','us-east-2'],
      description: 'AWS Account Region'
    )
  }

  stages { 

        stage('deploy-stack') {
        when {
            expression { params.ACTION == 'deploy-stack' }
        }
        steps {
        sh "aws cloudformation create-stack --stack-name ${STACK_NAME} ${PARAMETERS_FILE_NAME} --template-body file://${TEMPLATE_NAME} --region ${REGION}"
        }
    }

        stage('update-stack') {
        when {
            expression { params.ACTION == 'update-stack' }
        }
        steps {
        sh "aws cloudformation update-stack --stack-name ${STACK_NAME} --template-body file://${TEMPLATE_NAME} --region ${REGION}"    
        }
    }

        stage('delete-stack') {
        when {
            expression { params.ACTION == 'delete-stack' }
        }
        steps {
        sh "aws cloudformation delete-stack --stack-name ${STACK_NAME} --region ${REGION}"    
        }
    }
  }
}
